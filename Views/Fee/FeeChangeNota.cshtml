@{ ViewBag.scripts = new List<string>();
 ViewBag.bundles = new List<string>();
 ViewBag.directives = new List<string>();
 ViewBag.modules = new List<string>();
}
<!-- MAIN CONTENT -->
<div id="content" ng-app="App" ng-controller="FeeChangeNotaController as ctl">
    <div ng-controller="viewController as vm">
        <section id="widget-grid" class="">
            <div class="row">
                <div class="col-xs-12 col-sm-12 col-md-12 col-lg-12">
                    @Html.RenderWidget("wChange", "Change Nota Equities", new List<IHtmlString>() {
                        Html.RenderForm("filterForm", new List<IHtmlString>() {
                            Html.RenderRow(new List<IHtmlString>() {
                                Html.RenderDatetimePicker("DT_DATMOV", "Mov. Date", gridPart: 2, required: true, ng_model: "ctl.filter.DT_DATMOV", allowTime: false, ng_change: "ctl.update()" ),
                                Html.RenderDatetimePicker("DT_NEGOCIO", "Trade Date", gridPart: 2, required: true, ng_model: "ctl.filter.DT_NEGOCIO", allowTime: false, ng_change: "ctl.update()" ),
                                Html.RenderButton(ButtonType.Button, ButtonColor.Primary, gridPart: 2, size: ButtonSize.md, label: "Search", ng_click: "ctl.update()" )                                
                            }),
                            Html.RenderRow(new List<IHtmlString>() {
                                Html.RenderFieldset(new List<IHtmlString>() {
                                    Html.RenderDataTable("dtChangeNota", new List<DataGridOptions>() {
                                        new DataGridOptions() { Id = "NR_NOTA", ColumnName = "ID", Sortable = true, Expand = true, isKey = true, Order = "asc" },
                                        new DataGridOptions() { Id = "CD_CLIENTE", Sortable = true, ColumnName = "Client"},
                                        new DataGridOptions() { Id = "DT_DATMOV", Sortable = true, ColumnName = "Mov. Date",  Type = ColumnType.Date},
                                        new DataGridOptions() { Id = "DT_NEGOCIO", Sortable = true, ColumnName = "Trade Date",  Type = ColumnType.Date },                                                                                
                                        new DataGridOptions() { Id = "MOV_TYPE", ColumnName = "Mov Type", Sortable = true },
                                        new DataGridOptions() { Id = "VL_TOTNEG", ColumnName = "Volumn", HidePhone = true, HideTablet = false, Sortable = true  },
                                        new DataGridOptions() { Id = "VL_LIQNOT", ColumnName = "Vl. Liq Nota", Sortable = true, HidePhone = true, HideTablet = true, NoWrap = true },
                                        new DataGridOptions() { Id = "VL_EMOLUM", ColumnName = "Emolum", Sortable = true, HidePhone = true, HideTablet = true, NoWrap = true },                                        
                                        new DataGridOptions() { Id = "VAL_CORT_EXEC", ColumnName = "Broker Fee", Sortable = true, HidePhone = true, HideTablet = true },
                                        new DataGridOptions() { Id = "VL_VDAVIS", ColumnName = "Short VIS", Sortable = true, HidePhone = true, HideTablet = true },
                                        new DataGridOptions() { Id = "VL_CPAVIS", ColumnName = "Long VIS", Sortable = true, HidePhone = true, HideTablet = true },
                                        new DataGridOptions() { Id = "VL_VDAOPC", ColumnName = "Short OPC", Sortable = true, HidePhone = true, HideTablet = true},
                                        new DataGridOptions() { Id = "VL_CPAOPC", ColumnName = "Long OPC", Sortable = true, HidePhone = true, HideTablet = true },
                                        },
                                        actions: new List<DataGridActions>() { new DataGridActions() { Ng_click = "ctl.modify", Color = ButtonColor.Warning, Icon = "edit" }},
                                        itemsPerPage: 20,
                                        postData: "DT_DATMOV : moment().format('DD/MM/YYYY'), DT_NEGOCIO : moment().format('DD/MM/YYYY')",
                                        ajax: "GetNotaFeeView",
                                        columnFilter: true )
                                })
                            })
                        })
                    }
                )

                    @Html.RenderModal("gridEditModal", "Edit Fee", new List<IHtmlString>() {
                    Html.RenderForm("editForm", new List<IHtmlString>() {
                    Html.RenderRow(new List<IHtmlString>() {
                        Html.RenderTextbox("NR_NOTA", "Nota ID", gridPart: 4, maxLength: 30, ng_model: "ctl.editItem.NR_NOTA", required: false, enable: false),
                        Html.RenderTextbox("VAL_CORT_EXEC", "Broker Fee", gridPart: 4, maxLength: 30, ng_model: "ctl.editItem.VAL_CORT_EXEC", required: true, decimalScale: 2, positiveOnly: true, ngFocus: "ctl.focus($event)")
                    }),
                    },
                    new List<IHtmlString>() {
                        Html.RenderButton(ButtonType.Submit, ButtonColor.Primary, label: "Save", ng_click: "ctl.save()"),
                        Html.RenderButton(ButtonType.Button, ButtonColor.Danger, label: "Cancel", attributes:"data-dismiss='modal'") })
                    }, @class: "no-padding")

                })
                </div>
            </div>
        </section>
    </div>
</div>

@section pagespecific {
    @foreach (string bundle in ViewBag.bundles)
    {
        @Scripts.Render(bundle);
    }
    @Html.RenderAngularApp()
    @Html.RenderAngularController("view")
    <script type="text/javascript" src="~/AngularControllers/Fee/FeeChangeNotaController.js?version=@ViewBag.JSVersion"></script>
}
